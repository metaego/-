# Generated by Django 3.2.25 on 2024-04-27 16:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllergyCode',
            fields=[
                ('allergy_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('allergy_code_name', models.CharField(max_length=50)),
                ('allergy_code_desc', models.CharField(blank=True, max_length=500, null=True)),
                ('use_yn', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'allergy_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ComCodeGrp',
            fields=[
                ('com_code_grp', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('com_code_grp_name', models.CharField(max_length=10)),
                ('com_code_grp_desc', models.CharField(blank=True, max_length=500, null=True)),
                ('use_yn', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'com_code_grp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DiseaseCode',
            fields=[
                ('disease_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('disease_code_name', models.CharField(max_length=50)),
                ('disease_code_desc', models.CharField(blank=True, max_length=500, null=True)),
                ('use_yn', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'disease_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FunctionCode',
            fields=[
                ('function_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('function_code_name', models.CharField(max_length=50)),
                ('function_code_desc', models.CharField(blank=True, max_length=500, null=True)),
                ('use_yn', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'function_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('ingredient_id', models.AutoField(primary_key=True, serialize=False)),
                ('ingredient_name', models.CharField(max_length=100)),
                ('ingredient_limit_high', models.DecimalField(blank=True, decimal_places=10, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('ingredient_limit_low', models.DecimalField(blank=True, decimal_places=10, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('ingredient_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('ingredient_function_content', models.TextField(blank=True, null=True)),
                ('ingredient_caution', models.TextField(blank=True, null=True)),
                ('ingredient_type', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'ingredient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=50)),
                ('product_company', models.CharField(max_length=50)),
                ('product_instruction', models.TextField(blank=True, null=True)),
                ('product_function_content', models.TextField(blank=True, null=True)),
                ('product_caution', models.TextField(blank=True, null=True)),
                ('product_serving', models.TextField(blank=True, null=True)),
                ('product_dispos', models.CharField(blank=True, max_length=20, null=True)),
                ('product_storage_method', models.TextField(blank=True, null=True)),
                ('product_image', models.TextField(blank=True, null=True)),
                ('product_rating_avg', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('product_rating_cnt', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_name', models.CharField(max_length=20)),
                ('profile_birth', models.DateField()),
                ('profile_status', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('recommendation_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'recommendation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('survey_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('survey_age_group', models.CharField(max_length=20)),
                ('survey_sex', models.CharField(max_length=1)),
                ('survey_pregnancy_code', models.CharField(max_length=10)),
                ('survey_operation_code', models.CharField(blank=True, max_length=10, null=True)),
                ('survey_alcohol_code', models.CharField(blank=True, max_length=10, null=True)),
                ('survey_smoke', models.CharField(blank=True, max_length=1, null=True)),
                ('survey_height', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('survey_weight', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'survey',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('custom_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('custom_user_email', models.CharField(max_length=50, unique=True)),
                ('custom_user_password', models.TextField()),
                ('custom_user_role', models.CharField(max_length=20)),
                ('custom_user_status', models.CharField(max_length=10)),
                ('custom_created_at', models.DateTimeField(auto_now_add=True)),
                ('custom_modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('cumstom_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('custom_last_login', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SurveyFunction',
            fields=[
                ('survey_function_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('survey_function_rank', models.IntegerField(null=True)),
                ('function_code', models.ForeignKey(db_column='function_code', on_delete=django.db.models.deletion.CASCADE, to='users.functioncode')),
                ('survey_id', models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'survey_function',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SurveyDisease',
            fields=[
                ('survey_disease_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('disease_code', models.ForeignKey(db_column='disease_code', on_delete=django.db.models.deletion.CASCADE, to='users.diseasecode')),
                ('survey_id', models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'survey_disease',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SurveyAllergy',
            fields=[
                ('survey_allergy_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('allergy_code', models.ForeignKey(db_column='allergy_code', on_delete=django.db.models.deletion.CASCADE, to='users.allergycode')),
                ('survey_id', models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'survey_allergy',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='survey',
            name='custom_user_id',
            field=models.ForeignKey(db_column='custom_user_id', on_delete=django.db.models.deletion.CASCADE, to='users.user'),
        ),
        migrations.AddField(
            model_name='survey',
            name='profile_id',
            field=models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile'),
        ),
        migrations.CreateModel(
            name='RecommendationProduct',
            fields=[
                ('recommendation_product_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('recommendation_id', models.ForeignKey(db_column='recommendation_id', on_delete=django.db.models.deletion.CASCADE, to='users.recommendation')),
            ],
            options={
                'db_table': 'recommendation_product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecommendationIngredient',
            fields=[
                ('recommendation_ingredient_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ingredient_id', models.ForeignKey(db_column='ingredient_id', on_delete=django.db.models.deletion.CASCADE, to='users.ingredient')),
                ('recommendation_id', models.ForeignKey(db_column='recommendation_id', on_delete=django.db.models.deletion.CASCADE, to='users.recommendation')),
            ],
            options={
                'db_table': 'recommendation_ingredient',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='recommendation',
            name='custom_user_id',
            field=models.ForeignKey(db_column='custom_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='recommendations_user', to='users.user'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='profile_id',
            field=models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='survey_id',
            field=models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey'),
        ),
        migrations.AddField(
            model_name='profile',
            name='custom_user_id',
            field=models.ForeignKey(db_column='custom_user_id', on_delete=django.db.models.deletion.CASCADE, to='users.user'),
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('product_review_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_review_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('product_review_content', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('profile_id', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('survey_id', models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'product_review',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductLog',
            fields=[
                ('product_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('visited_at', models.DateTimeField(auto_now=True, null=True)),
                ('leaved_at', models.DateTimeField(auto_now=True, null=True)),
                ('product_log_duration', models.PositiveIntegerField(blank=True, null=True)),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('profile_id', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('survey_id', models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'product_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductLike',
            fields=[
                ('product_like_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('custom_user_id', models.ForeignKey(db_column='custom_user_id', on_delete=django.db.models.deletion.CASCADE, to='users.user')),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('profile_id', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'db_table': 'product_like',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductIngredient',
            fields=[
                ('product_ingredient_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ingredient_id', models.ForeignKey(db_column='ingredient_id', on_delete=django.db.models.deletion.CASCADE, to='users.ingredient')),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
            ],
            options={
                'db_table': 'product_ingredient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductFunction',
            fields=[
                ('product_function_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('function_code', models.ForeignKey(db_column='function_code', on_delete=django.db.models.deletion.CASCADE, to='users.functioncode')),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
            ],
            options={
                'db_table': 'product_function',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IngredientFunction',
            fields=[
                ('ingredient_function_id', models.AutoField(primary_key=True, serialize=False)),
                ('function_code', models.ForeignKey(db_column='function_code', on_delete=django.db.models.deletion.CASCADE, to='users.functioncode')),
                ('ingredient_id', models.ForeignKey(db_column='ingredient_id', on_delete=django.db.models.deletion.CASCADE, to='users.ingredient')),
            ],
            options={
                'db_table': 'ingredient_function',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ComCode',
            fields=[
                ('com_code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('com_code_name', models.CharField(max_length=50)),
                ('com_code_desc', models.CharField(blank=True, max_length=500, null=True)),
                ('use_yn', models.CharField(max_length=1)),
                ('com_code_grp', models.ForeignKey(db_column='com_code_grp', on_delete=django.db.models.deletion.CASCADE, to='users.comcodegrp')),
            ],
            options={
                'db_table': 'com_code',
                'managed': True,
            },
        ),
    ]
