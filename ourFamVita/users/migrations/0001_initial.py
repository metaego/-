# Generated by Django 3.2.25 on 2024-06-12 12:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_email', models.EmailField(max_length=50, unique=True)),
                ('user_password', models.CharField(max_length=50)),
                ('user_role', models.CharField(default='user', max_length=20)),
                ('user_status', models.CharField(default='active', max_length=10)),
                ('user_created_at', models.DateTimeField(auto_now_add=True)),
                ('user_modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('user_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('user_last_login', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ComCode',
            fields=[
                ('com_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('com_code_name', models.CharField(max_length=50)),
                ('com_code_desc', models.CharField(blank=True, max_length=500)),
                ('use_yn', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'com_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ComCodeGrp',
            fields=[
                ('com_code_grp', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('com_code_grp_name', models.CharField(max_length=50)),
                ('com_code_grp_desc', models.CharField(blank=True, max_length=500)),
                ('use_yn', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'com_code_grp',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('ingredient_id', models.AutoField(primary_key=True, serialize=False)),
                ('ingredient_grp_name', models.CharField(max_length=100)),
                ('ingredient_name', models.CharField(max_length=100)),
                ('ingredient_limit_high', models.TextField(blank=True)),
                ('ingredient_limit_low', models.TextField(blank=True)),
                ('ingredient_unit', models.CharField(blank=True, max_length=10)),
                ('ingredient_type', models.CharField(blank=True, max_length=10)),
                ('ingredient_function_content', models.JSONField(blank=True, null=True)),
                ('ingredient_caution_content', models.JSONField(blank=True, null=True)),
                ('ingredient_function_code', models.JSONField(blank=True, null=True)),
                ('ingredient_caution_code', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ingredient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('product_name', models.TextField()),
                ('product_company', models.CharField(max_length=100)),
                ('product_instruction', models.TextField(blank=True)),
                ('product_image', models.TextField(blank=True, null=True)),
                ('product_storage_method', models.TextField(blank=True)),
                ('product_dispos', models.CharField(blank=True, max_length=20)),
                ('product_serving', models.TextField(blank=True)),
                ('product_function_content', models.JSONField(blank=True, null=True)),
                ('product_caution_content', models.JSONField(blank=True, null=True)),
                ('product_function_code', models.JSONField(blank=True, null=True)),
                ('product_caution_code', models.JSONField(blank=True, null=True)),
                ('product_ingredient_id', models.JSONField(blank=True, null=True)),
                ('product_rating_avg', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('product_rating_cnt', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('profile_name', models.CharField(max_length=20)),
                ('profile_birth', models.DateField()),
                ('profile_status', models.CharField(default='active', max_length=10)),
                ('profile_created_at', models.DateTimeField(auto_now_add=True)),
                ('profile_modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('profile_deleted_at', models.DateTimeField(auto_now=True, null=True)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recom',
            fields=[
                ('recom_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('recom_created_at', models.DateTimeField(auto_now_add=True)),
                ('profile_id', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'db_table': 'recom',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('survey_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('survey_sex', models.CharField(max_length=1)),
                ('survey_age_group', models.CharField(max_length=20)),
                ('survey_pregnancy_code', models.CharField(max_length=10)),
                ('survey_operation_code', models.CharField(blank=True, max_length=10)),
                ('survey_alcohol_code', models.CharField(blank=True, max_length=10)),
                ('survey_smoking_code', models.CharField(blank=True, max_length=1)),
                ('survey_allergy_code', models.JSONField()),
                ('survey_disease_code', models.JSONField(blank=True, null=True)),
                ('survey_function_code', models.JSONField(blank=True, null=True)),
                ('survey_height', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('survey_weight', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('survey_created_at', models.DateTimeField(auto_now_add=True)),
                ('profile_id', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'survey',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SurveyComCode',
            fields=[
                ('survey_com_code_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('survey_com_code_rank', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('com_code', models.ForeignKey(db_column='com_code', on_delete=django.db.models.deletion.CASCADE, to='users.comcode')),
                ('com_code_grp', models.ForeignKey(db_column='com_code_grp', on_delete=django.db.models.deletion.CASCADE, to='users.comcodegrp')),
                ('survey_id', models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'survey_com_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecomSurveyProduct',
            fields=[
                ('recom_survey_product_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('recom_id', models.ForeignKey(db_column='recom_id', on_delete=django.db.models.deletion.CASCADE, to='users.recom')),
            ],
            options={
                'db_table': 'recom_survey_product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecomSexAgeProduct',
            fields=[
                ('recom_sex_age_product_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('recom_id', models.ForeignKey(db_column='recom_id', on_delete=django.db.models.deletion.CASCADE, to='users.recom')),
            ],
            options={
                'db_table': 'recom_sex_age_product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecomIngredient',
            fields=[
                ('recom_ingredient_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ingredient_id', models.ForeignKey(db_column='ingredient_id', on_delete=django.db.models.deletion.CASCADE, to='users.ingredient')),
                ('recom_id', models.ForeignKey(db_column='recom_id', on_delete=django.db.models.deletion.CASCADE, to='users.recom')),
            ],
            options={
                'db_table': 'recom_ingredient',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='recom',
            name='survey_id',
            field=models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey'),
        ),
        migrations.AddField(
            model_name='recom',
            name='user_id',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='recom_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProductView',
            fields=[
                ('product_view_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_view_visited_at', models.DateTimeField(auto_now=True, null=True)),
                ('product_view_leaved_at', models.DateTimeField(auto_now=True, null=True)),
                ('product_view_duration', models.PositiveIntegerField(blank=True, null=True)),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('profile_id', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('survey_id', models.ForeignKey(db_column='survey_id', on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'product_view',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('product_review_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_review_rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('product_review_content', models.CharField(blank=True, max_length=200)),
                ('product_review_created_at', models.DateTimeField(auto_now_add=True)),
                ('product_review_modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('product_review_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('profile_id', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'db_table': 'product_review',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductLike',
            fields=[
                ('product_like_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_like_page', models.CharField(blank=True, max_length=50)),
                ('product_like_created_at', models.DateTimeField(auto_now_add=True)),
                ('product_like_deleted_at', models.DateTimeField(blank=True, null=True)),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('profile_id', models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'product_like',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductIngredient',
            fields=[
                ('product_ingredient_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ingredient_id', models.ForeignKey(db_column='ingredient_id', on_delete=django.db.models.deletion.CASCADE, to='users.ingredient')),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
            ],
            options={
                'db_table': 'product_ingredient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductComCode',
            fields=[
                ('product_com_code_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('com_code', models.ForeignKey(db_column='com_code', on_delete=django.db.models.deletion.CASCADE, to='users.comcode')),
                ('com_code_grp', models.ForeignKey(db_column='com_code_grp', on_delete=django.db.models.deletion.CASCADE, to='users.comcodegrp')),
                ('product_id', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='users.product')),
            ],
            options={
                'db_table': 'product_com_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IngredientComCode',
            fields=[
                ('ingredient_com_code_id', models.AutoField(primary_key=True, serialize=False)),
                ('com_code', models.ForeignKey(db_column='com_code', on_delete=django.db.models.deletion.CASCADE, to='users.comcode')),
                ('com_code_grp', models.ForeignKey(db_column='com_code_grp', on_delete=django.db.models.deletion.CASCADE, to='users.comcodegrp')),
                ('ingredient_id', models.ForeignKey(db_column='ingredient_id', on_delete=django.db.models.deletion.CASCADE, to='users.ingredient')),
            ],
            options={
                'db_table': 'ingredient_com_code',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='comcode',
            name='com_code_grp',
            field=models.ForeignKey(db_column='com_code_grp', on_delete=django.db.models.deletion.CASCADE, to='users.comcodegrp'),
        ),
    ]
